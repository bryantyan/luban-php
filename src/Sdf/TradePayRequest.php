<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dealer.proto

namespace Shopex\Luban\Sdf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>luban.TradePayRequest</code>
 */
class TradePayRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string TradeBn = 1;</code>
     */
    private $TradeBn = '';
    /**
     * Generated from protobuf field <code>.luban.OrderStatus Status = 2;</code>
     */
    private $Status = 0;
    /**
     * Generated from protobuf field <code>double Amount = 3;</code>
     */
    private $Amount = 0.0;

    public function __construct() {
        \GPBMetadata\Dealer::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>string TradeBn = 1;</code>
     * @return string
     */
    public function getTradeBn()
    {
        return $this->TradeBn;
    }

    /**
     * Generated from protobuf field <code>string TradeBn = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTradeBn($var)
    {
        GPBUtil::checkString($var, True);
        $this->TradeBn = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.luban.OrderStatus Status = 2;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->Status;
    }

    /**
     * Generated from protobuf field <code>.luban.OrderStatus Status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Shopex\Luban\Sdf\OrderStatus::class);
        $this->Status = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double Amount = 3;</code>
     * @return float
     */
    public function getAmount()
    {
        return $this->Amount;
    }

    /**
     * Generated from protobuf field <code>double Amount = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setAmount($var)
    {
        GPBUtil::checkDouble($var);
        $this->Amount = $var;

        return $this;
    }

}

